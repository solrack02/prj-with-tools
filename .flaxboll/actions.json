{"1724691557376":{"actionType":"saveAll","createdAt":"1724691557376","actionID":"1724691557376","userID":"#TEMP","path":"system.capsules.9b980d3f-c617-4859-9227-ab7f39693200.capsUseCodeInfo.capsUseInputs.sss_freeValue-0.capsIptTxtValue","oldValue":"// Visibilidade da Face Oposta - backfaceVisibility\ntype Tprops_backfaceVisibility = { pass: { arrayValue: any } };\nexport const backfaceVisibility = (props: Tprops_backfaceVisibility) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { backfaceVisibility: arrayValue };\n};\n\n// Cor de Fundo - backgroundColor\ntype Tprops_backgroundColor = { pass: { arrayValue: any } };\nexport const backgroundColor = (props: Tprops_backgroundColor) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n\n  return { backgroundColor: arrayValue };\n};\n\n// Cor da Borda de Baixo - borderBottomColor\ntype Tprops_borderBottomColor = { pass: { arrayValue: any } };\nexport const borderBottomColor = (props: Tprops_borderBottomColor) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderBottomColor: arrayValue };\n};\n\n// Arredondamento da Borda de Baixo(Final) - borderBottomEndRadius\ntype Tprops_borderBottomEndRadius = { pass: { arrayValue: any } };\nexport const borderBottomEndRadius = (props: Tprops_borderBottomEndRadius) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderBottomEndRadius: arrayValue };\n};\n\n// Arredondamento da Borda de Baixo(Esquerda) - borderBottomLeftRadius\ntype Tprops_borderBottomLeftRadius = { pass: { arrayValue: any } };\nexport const borderBottomLeftRadius = (\n  props: Tprops_borderBottomLeftRadius,\n) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderBottomLeftRadius: arrayValue };\n};\n\n// Arredondamento da Borda de Baixo(Direita) - borderBottomRightRadius\ntype Tprops_borderBottomRightRadius = { pass: { arrayValue: any } };\nexport const borderBottomRightRadius = (\n  props: Tprops_borderBottomRightRadius,\n) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderBottomRightRadius: arrayValue };\n};\n\n// Arredondamento da Borda de Baixo(Início) - borderBottomStartRadius\ntype Tprops_borderBottomStartRadius = { pass: { arrayValue: any } };\nexport const borderBottomStartRadius = (\n  props: Tprops_borderBottomStartRadius,\n) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderBottomStartRadius: arrayValue };\n};\n\n// Espessura da Borda(Baixo) - borderBottomWidth\ntype Tprops_borderBottomWidth = { pass: { arrayValue: any } };\nexport const borderBottomWidth = (props: Tprops_borderBottomWidth) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderBottomWidth: arrayValue };\n};\n\n// Cor da Borda Geral - borderColor\ntype Tprops_borderColor = { pass: { arrayValue: any } };\nexport const borderColor = (props: Tprops_borderColor) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderColor: arrayValue };\n};\n\n// Cor do Fim da Borda - borderEndColor\ntype Tprops_borderEndColor = { pass: { arrayValue: any } };\nexport const borderEndColor = (props: Tprops_borderEndColor) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderEndColor: arrayValue };\n};\n\n// Cor da Borda Esquerda - borderLeftColor'\ntype Tprops_borderLeftColor = { pass: { arrayValue: any } };\nexport const borderLeftColor = (props: Tprops_borderLeftColor) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderLeftColor: arrayValue };\n};\n\n// Espessura da Borda (Esquerda) - borderLeftWidth\ntype Tprops_borderLeftWidth = { pass: { arrayValue: any } };\nexport const borderLeftWidth = (props: Tprops_borderLeftWidth) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderLeftWidth: arrayValue };\n};\n\n// Arredondamento da Borda - borderRadius\ntype Tprops_borderRadius = { pass: { arrayValue: any } };\nexport const borderRadius = (props: Tprops_borderRadius) => {\n  let { arrayValue } = props.pass;\n\n  return { borderRadius: arrayValue[0] };\n};\n\n// Cor da Borda Direita - borderRightColor\ntype Tprops_borderRightColor = { pass: { arrayValue: any } };\nexport const borderRightColor = (props: Tprops_borderRightColor) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderRightColor: arrayValue };\n};\n\n// Espessura da Borda (Direita) - borderRightWidth\ntype Tprops_borderRightWidth = { pass: { arrayValue: any } };\nexport const borderRightWidth = (props: Tprops_borderRightWidth) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderRightWidth: arrayValue };\n};\n\n// Cor do Início da Borda - borderStartColor\ntype Tprops_borderStartColor = { pass: { arrayValue: any } };\nexport const borderStartColor = (props: Tprops_borderStartColor) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderStartColor: arrayValue };\n};\n\n// Tipo de Borda - borderStyle\ntype Tprops_borderStyle = { pass: { arrayValue: any } };\nexport const borderStyle = (props: Tprops_borderStyle) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderStyle: arrayValue };\n};\n\n// Cor do Topo da Borda - borderTopColor\ntype Tprops_borderTopColor = { pass: { arrayValue: any } };\nexport const borderTopColor = (props: Tprops_borderTopColor) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderTopColor: arrayValue };\n};\n\n// Arredondamento da Borda de Cima(final) - borderTopEndRadius\ntype Tprops_borderTopEndRadius = { pass: { arrayValue: any } };\nexport const borderTopEndRadius = (props: Tprops_borderTopEndRadius) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderTopEndRadius: arrayValue };\n};\n\n// Arredondamento da Borda de Cima(Esquerda) - borderTopLeftRadius\ntype Tprops_borderTopLeftRadius = { pass: { arrayValue: any } };\nexport const borderTopLeftRadius = (props: Tprops_borderTopLeftRadius) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderTopLeftRadius: arrayValue };\n};\n\n// Arredondamento da Borda de Cima(Direita) - borderTopRightRadius\ntype Tprops_borderTopRightRadius = { pass: { arrayValue: any } };\nexport const borderTopRightRadius = (props: Tprops_borderTopRightRadius) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderTopRightRadius: arrayValue };\n};\n\n// Arredondamento da Borda de Cima(Início) - borderTopStartRadius\ntype Tprops_borderTopStartRadius = { pass: { arrayValue: any } };\nexport const borderTopStartRadius = (props: Tprops_borderTopStartRadius) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderTopStartRadius: arrayValue };\n};\n\n// Espessura da Borda(Cima) - borderTopWidth\ntype Tprops_borderTopWidth = { pass: { arrayValue: any } };\nexport const borderTopWidth = (props: Tprops_borderTopWidth) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderTopWidth: arrayValue };\n};\n\n// Espessura da Borda Geral - borderWidth\ntype Tprops_borderWidth = { pass: { arrayValue: any } };\nexport const borderWidth = (props: Tprops_borderWidth) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderWidth: arrayValue };\n};\n\n// Opacidade - opacity\ntype Tprops_Opacity = { pass: { arrayValue: any } };\nexport const Opacity = (props: Tprops_Opacity) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { opacity: arrayValue };\n};\n\n// FALTA: borderCurve, elevation e pointerEvents\n","newValue":"// Visibilidade da Face Oposta - backfaceVisibility\ntype Tprops_backfaceVisibility = { pass: { arrayValue: any } };\nexport const backfaceVisibility = (props: Tprops_backfaceVisibility) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { backfaceVisibility: arrayValue };\n};\n\n// Cor de Fundo - backgroundColor\ntype Tprops_backgroundColor = { pass: { arrayValue: any } };\nexport const backgroundColor = (props: Tprops_backgroundColor) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\nconsole.log(\"AQUI 200\", {arrayValue});\n  return { backgroundColor: arrayValue };\n};\n\n// Cor da Borda de Baixo - borderBottomColor\ntype Tprops_borderBottomColor = { pass: { arrayValue: any } };\nexport const borderBottomColor = (props: Tprops_borderBottomColor) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderBottomColor: arrayValue };\n};\n\n// Arredondamento da Borda de Baixo(Final) - borderBottomEndRadius\ntype Tprops_borderBottomEndRadius = { pass: { arrayValue: any } };\nexport const borderBottomEndRadius = (props: Tprops_borderBottomEndRadius) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderBottomEndRadius: arrayValue };\n};\n\n// Arredondamento da Borda de Baixo(Esquerda) - borderBottomLeftRadius\ntype Tprops_borderBottomLeftRadius = { pass: { arrayValue: any } };\nexport const borderBottomLeftRadius = (\n  props: Tprops_borderBottomLeftRadius,\n) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderBottomLeftRadius: arrayValue };\n};\n\n// Arredondamento da Borda de Baixo(Direita) - borderBottomRightRadius\ntype Tprops_borderBottomRightRadius = { pass: { arrayValue: any } };\nexport const borderBottomRightRadius = (\n  props: Tprops_borderBottomRightRadius,\n) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderBottomRightRadius: arrayValue };\n};\n\n// Arredondamento da Borda de Baixo(Início) - borderBottomStartRadius\ntype Tprops_borderBottomStartRadius = { pass: { arrayValue: any } };\nexport const borderBottomStartRadius = (\n  props: Tprops_borderBottomStartRadius,\n) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderBottomStartRadius: arrayValue };\n};\n\n// Espessura da Borda(Baixo) - borderBottomWidth\ntype Tprops_borderBottomWidth = { pass: { arrayValue: any } };\nexport const borderBottomWidth = (props: Tprops_borderBottomWidth) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderBottomWidth: arrayValue };\n};\n\n// Cor da Borda Geral - borderColor\ntype Tprops_borderColor = { pass: { arrayValue: any } };\nexport const borderColor = (props: Tprops_borderColor) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderColor: arrayValue };\n};\n\n// Cor do Fim da Borda - borderEndColor\ntype Tprops_borderEndColor = { pass: { arrayValue: any } };\nexport const borderEndColor = (props: Tprops_borderEndColor) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderEndColor: arrayValue };\n};\n\n// Cor da Borda Esquerda - borderLeftColor'\ntype Tprops_borderLeftColor = { pass: { arrayValue: any } };\nexport const borderLeftColor = (props: Tprops_borderLeftColor) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderLeftColor: arrayValue };\n};\n\n// Espessura da Borda (Esquerda) - borderLeftWidth\ntype Tprops_borderLeftWidth = { pass: { arrayValue: any } };\nexport const borderLeftWidth = (props: Tprops_borderLeftWidth) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderLeftWidth: arrayValue };\n};\n\n// Arredondamento da Borda - borderRadius\ntype Tprops_borderRadius = { pass: { arrayValue: any } };\nexport const borderRadius = (props: Tprops_borderRadius) => {\n  let { arrayValue } = props.pass;\n\n  return { borderRadius: arrayValue[0] };\n};\n\n// Cor da Borda Direita - borderRightColor\ntype Tprops_borderRightColor = { pass: { arrayValue: any } };\nexport const borderRightColor = (props: Tprops_borderRightColor) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderRightColor: arrayValue };\n};\n\n// Espessura da Borda (Direita) - borderRightWidth\ntype Tprops_borderRightWidth = { pass: { arrayValue: any } };\nexport const borderRightWidth = (props: Tprops_borderRightWidth) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderRightWidth: arrayValue };\n};\n\n// Cor do Início da Borda - borderStartColor\ntype Tprops_borderStartColor = { pass: { arrayValue: any } };\nexport const borderStartColor = (props: Tprops_borderStartColor) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderStartColor: arrayValue };\n};\n\n// Tipo de Borda - borderStyle\ntype Tprops_borderStyle = { pass: { arrayValue: any } };\nexport const borderStyle = (props: Tprops_borderStyle) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderStyle: arrayValue };\n};\n\n// Cor do Topo da Borda - borderTopColor\ntype Tprops_borderTopColor = { pass: { arrayValue: any } };\nexport const borderTopColor = (props: Tprops_borderTopColor) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderTopColor: arrayValue };\n};\n\n// Arredondamento da Borda de Cima(final) - borderTopEndRadius\ntype Tprops_borderTopEndRadius = { pass: { arrayValue: any } };\nexport const borderTopEndRadius = (props: Tprops_borderTopEndRadius) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderTopEndRadius: arrayValue };\n};\n\n// Arredondamento da Borda de Cima(Esquerda) - borderTopLeftRadius\ntype Tprops_borderTopLeftRadius = { pass: { arrayValue: any } };\nexport const borderTopLeftRadius = (props: Tprops_borderTopLeftRadius) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderTopLeftRadius: arrayValue };\n};\n\n// Arredondamento da Borda de Cima(Direita) - borderTopRightRadius\ntype Tprops_borderTopRightRadius = { pass: { arrayValue: any } };\nexport const borderTopRightRadius = (props: Tprops_borderTopRightRadius) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderTopRightRadius: arrayValue };\n};\n\n// Arredondamento da Borda de Cima(Início) - borderTopStartRadius\ntype Tprops_borderTopStartRadius = { pass: { arrayValue: any } };\nexport const borderTopStartRadius = (props: Tprops_borderTopStartRadius) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderTopStartRadius: arrayValue };\n};\n\n// Espessura da Borda(Cima) - borderTopWidth\ntype Tprops_borderTopWidth = { pass: { arrayValue: any } };\nexport const borderTopWidth = (props: Tprops_borderTopWidth) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderTopWidth: arrayValue };\n};\n\n// Espessura da Borda Geral - borderWidth\ntype Tprops_borderWidth = { pass: { arrayValue: any } };\nexport const borderWidth = (props: Tprops_borderWidth) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { borderWidth: arrayValue };\n};\n\n// Opacidade - opacity\ntype Tprops_Opacity = { pass: { arrayValue: any } };\nexport const Opacity = (props: Tprops_Opacity) => {\n  let { arrayValue } = props.pass;\n\n  const isArray = Array.isArray(arrayValue);\n  if (isArray) {\n    arrayValue = arrayValue.join();\n\n    const isNumber = !isNaN(arrayValue);\n    if (isNumber) arrayValue = Number(arrayValue);\n  }\n  return { opacity: arrayValue };\n};\n\n// FALTA: borderCurve, elevation e pointerEvents\n"}}